#!/bin/bash

SECRETS_FOLDER=secrets
REALM_GRAFANA_SECRET=Z3UIkhnpy7fXPKnrhjkrUov1379wUgTU
REALM_APP_SECERET=YMnr9LdjNcqjRF94Q0i6PD2Ga2wTccrB

if [ -d "$SECRETS_FOLDER" ]; then rm -Rf $SECRETS_FOLDER; fi

count=$(docker network ls | grep monitoring | wc -l)
if [ "$count" -eq 0 ]; then docker network create monitoring; fi

mkdir -p $SECRETS_FOLDER

DATABASE_DEV_ENV=$SECRETS_FOLDER/postgres-application-dev.env
KEYCLOAK_DEV_ENV=$SECRETS_FOLDER/keycloak-dev.env
PG_EXPORTER_DEV_ENV=$SECRETS_FOLDER/postgres-exporter-dev.env
GRAFANA_DEV_ENV=$SECRETS_FOLDER/grafana-dev.env
POSTGRES_KEYCLOAK_ENV=$SECRETS_FOLDER/postgres-keycloak-dev.env

echo POSTGRES_USER=postgres >> $DATABASE_DEV_ENV
echo POSTGRES_PASSWORD=postgres >> $DATABASE_DEV_ENV

echo POSTGRES_USER=postgres >> $POSTGRES_KEYCLOAK_ENV
echo POSTGRES_PASSWORD=postgres >> $POSTGRES_KEYCLOAK_ENV

echo KEYCLOAK_ADMIN=admin >> $KEYCLOAK_DEV_ENV
echo KEYCLOAK_ADMIN_PASSWORD=admin >> $KEYCLOAK_DEV_ENV
echo CUSTOM_KC_GRAFANA_REALM_SECRET=$REALM_GRAFANA_SECRET >> $KEYCLOAK_DEV_ENV
echo CUSTOM_KC_APPLICATION_REALM_SECRET=$REALM_APP_SECERET >> $KEYCLOAK_DEV_ENV
echo KC_DB_USERNAME=postgres >> $KEYCLOAK_DEV_ENV
echo KC_DB_PASSWORD=postgres >> $KEYCLOAK_DEV_ENV

echo GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET=$REALM_GRAFANA_SECRET > $GRAFANA_DEV_ENV

CONNECTION_STRING=postgresql://postgres:postgres@postgres-application:5432/postgres?sslmode=disable
echo DATA_SOURCE_NAME=$CONNECTION_STRING >> $PG_EXPORTER_DEV_ENV

