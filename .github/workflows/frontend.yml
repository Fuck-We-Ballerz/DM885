name: Frontend Deploy

permissions:
  id-token: write
  contents: read

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      CLOUDSDK_COMPUTE_ZONE: europe-west3-a
      CLOUDSDK_CONTAINER_CLUSTER: dm885-grading-system
      KEYCLOAK_ADMIN: ${{ secrets.KEYCLOAK_ADMIN }}
      KEYCLOAK_ADMIN_PASSWORD: ${{ secrets.KEYCLOAK_ADMIN_PASSWORD }}
      CUSTOM_KC_GRAFANA_REALM_SECRET: ${{ secrets.GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET }}
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: ${{ secrets.GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET }}
      CUSTOM_KC_APPLICATION_REALM_SECRET: ${{ secrets.CUSTOM_KC_APPLICATION_REALM_SECRET }}
      KEYCLOAK_CLIENT_SECRET: ${{ secrets.CUSTOM_KC_APPLICATION_REALM_SECRET }}
      KC_DB_PASSWORD: ${{ secrets.KC_DB_PASSWORD }}
      KC_DB_USERNAME: ${{ secrets.KC_DB_USERNAME }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Configure Docker
        run: gcloud auth configure-docker --quiet

      - name: Set gcloud project
        run: gcloud config set project ${{ secrets.PROJECT_ID }}

      - name: Set gcloud compute zone
        run: gcloud config set compute/zone ${{ env.CLOUDSDK_COMPUTE_ZONE }}

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components update --quiet
          gcloud components install gke-gcloud-auth-plugin --quiet
          echo "export USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV

      - name: Get GKE credentials
        run: gcloud container clusters get-credentials ${{ env.CLOUDSDK_CONTAINER_CLUSTER }}

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Build and push Docker image (python-custom)
        run: |
          envsubst < frontend/user/config-prod.env > out.yaml && mv out.yaml frontend/user/config-prod.env
          docker build --build-arg ENVIRONMENT=prod -t gcr.io/devsecops-422807/python-custom -f frontend/user/Dockerfile frontend/user
          docker push gcr.io/devsecops-422807/python-custom
      
      - name: Package and deploy Helm chart (Frontend)
        run: |
          envsubst < frontend/helm/values-prod.yaml > out.yaml && mv out.yaml frontend/helm/values-prod.yaml
          helm package -d frontend/helm frontend/helm/.
          helm install frontend frontend/helm/frontend-0.1.0.tgz --values frontend/helm/values-prod.yaml